@error[1] 'unknown symbol at this state';

num       : /[0-9]+/;
lnum      : num;
rnum      : num;
qtype     : /[\*\+\?]/;
qspec     : /\{/ lnum (/,/ rnum?)? /\}/;
quantifier: qtype
          | qspec
          ;

rx_literal : /[^\|\*\+\?\(\)\{\}\[\]\.\/\\]/;
rx_escaped : /\\[\|\*\+\?\(\)\{\}\[\]\.\^\$\\0\;\/]/;
rx_char    : rx_escaped
           | rx_literal
           ;
rx_range   : rx_char (/-/ rx_char)?;
rx_class   : /[/ rx_range+ /]/;

rx_begin : /\^/;
rx_end   : /\$/;
rx_any   : /./;

rx_unnamed: /\?:/;
rx_group  : /\(/ rx_unnamed? rx_altern /\)/;
rx_primary: rx_literal
          | rx_escaped
          | rx_group
          | rx_class
          | rx_any
          ;

rx_repeat : rx_primary quantifier?;
rx_concat : rx_repeat+;
rx_altern : rx_concat ( /|/ rx_concat )*;
regex     : /\// rx_begin? rx_altern rx_end? /\//;

sep-      : /[ \t\n]+/;
skip-     : /[ \t\n]* /;
rule_end- : skip /\;/;
unstore   : /-/;
match     : /@/;
rulestart : /:/;
word      : /[a-zA-Z_][a-zA-Z_0-9]* /;
quoted    : /'(?:[^\\']|\\.)*'/;

builtin_error: /@ERROR\[/ num /\]/ sep quoted rule_end;

rule_flags  : unstore? match?;
rule_def    : skip word rule_flags skip rulestart;
rule_group  : /\(/ skip rule_altern skip /\)/;
rule_binerr : /$\[/ num /\]/;
rule_primary: regex
            | rule_group
            | rule_binerr
            | word
            ;
rule_repeat : skip rule_primary quantifier?;
rule_concat : rule_repeat+;
rule_altern : rule_concat ( skip /|/ rule_concat )*;
rule        : rule_def skip rule_altern rule_end;

lips: builtin_error
    | rule
    ;

grammar_end-@: /\0/;
grammar: regex
       | lips
       | grammar_end
       | $[1]
       ;

_start_: grammar+;

